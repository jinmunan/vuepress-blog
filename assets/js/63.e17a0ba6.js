(window.webpackJsonp=window.webpackJsonp||[]).push([[63],{393:function(a,s,t){"use strict";t.r(s);var n=t(3),e=Object(n.a)({},(function(){var a=this,s=a._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("div",{staticClass:"custom-block note"},[s("p",{staticClass:"custom-block-title"},[a._v("序言")]),a._v(" "),s("p",[a._v("Java8新特性")]),a._v(" "),s("p",[a._v("视频教程："),s("a",{attrs:{href:"https://www.bilibili.com/video/BV184411x7XA/?spm_id_from=333.337.search-card.all.click&vd_source=27e6ff4366a111178521f5c7e99fc284",target:"_blank",rel:"noopener noreferrer"}},[a._v("Java语言高级-Java8/9/10/11新特性-2019-尚硅谷"),s("OutboundLink")],1)]),a._v(" "),s("div",{staticClass:"custom-block right"},[s("p",[a._v("2023-01-01 @ 钟楠")])])]),a._v(" "),s("p"),s("div",{staticClass:"table-of-contents"},[s("ul",[s("li",[s("a",{attrs:{href:"#概述"}},[a._v("概述")])]),s("li",[s("a",{attrs:{href:"#lambda表达式"}},[a._v("Lambda表达式")])]),s("li",[s("a",{attrs:{href:"#函数式接口"}},[a._v("函数式接口")])]),s("li",[s("a",{attrs:{href:"#方法引用与构造器引用"}},[a._v("方法引用与构造器引用")])]),s("li",[s("a",{attrs:{href:"#stream-api"}},[a._v("Stream API")]),s("ul",[s("li",[s("a",{attrs:{href:"#创建流"}},[a._v("创建流")])]),s("li",[s("a",{attrs:{href:"#中间操作"}},[a._v("中间操作")])]),s("li",[s("a",{attrs:{href:"#终止操作"}},[a._v("终止操作")])]),s("li",[s("a",{attrs:{href:"#collectors"}},[a._v("Collectors")])])])]),s("li",[s("a",{attrs:{href:"#optional类"}},[a._v("Optional类")])]),s("li",[s("a",{attrs:{href:"#接口中的默认方法与静态方法"}},[a._v("接口中的默认方法与静态方法")])]),s("li",[s("a",{attrs:{href:"#新时间日期api"}},[a._v("新时间日期API")])])])]),s("p"),a._v(" "),s("h2",{attrs:{id:"概述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#概述"}},[a._v("#")]),a._v(" 概述")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.staticaly.com/gh/jinmunan/imgs@master/java8/image-20230101174314001.png",alt:"image-20230101174314001"}})]),a._v(" "),s("h2",{attrs:{id:"lambda表达式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#lambda表达式"}},[a._v("#")]),a._v(" Lambda表达式")]),a._v(" "),s("div",{staticClass:"language-txt line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-txt"}},[s("code",[a._v("左侧：指定了 Lambda 表达式需要的参数列表\n右侧：指定了 Lambda 体，是抽象方法的实现逻辑，是Lambda 表达式要执行的功能\n\n`（） -> {}`\n上联：左右遇一括号省 下联：左侧推断类型省 横批：能省就省\nLambda表达式基于函数式接口实现 \n\n类型推断L：Lambda 表达式的类型依赖于上下文环境，是由编译器推断出来的。\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br")])]),s("h2",{attrs:{id:"函数式接口"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#函数式接口"}},[a._v("#")]),a._v(" 函数式接口")]),a._v(" "),s("blockquote",[s("p",[a._v("接口中只有一个抽象方法的接口叫做函数式接口，通过"),s("code",[a._v("@FunctionalInterface")]),a._v("修饰判断是否是函数式接口")])]),a._v(" "),s("blockquote",[s("p",[a._v("四大主要的函数式接口")])]),a._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.staticaly.com/gh/jinmunan/imgs@master/java8/image-20230101174538390.png",alt:"image-20230101174538390"}})]),a._v(" "),s("h2",{attrs:{id:"方法引用与构造器引用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方法引用与构造器引用"}},[a._v("#")]),a._v(" 方法引用与构造器引用")]),a._v(" "),s("blockquote",[s("p",[a._v("方法引用：Lambda实现体的代码已经有实现，则可以直接使用方法引用")])]),a._v(" "),s("div",{staticClass:"language-txt line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-txt"}},[s("code",[a._v("对象::实例方法名\n类::静态方法名\n类::实例方法名\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br")])]),s("blockquote",[s("p",[a._v("构造器引用")])]),a._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 构造器引用")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"-----------------------------"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Supplier")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Emp")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v(" supplier3 "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("->")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Emp")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Supplier")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Emp")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v(" supplier4 "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Emp")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("::")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br")])]),s("h2",{attrs:{id:"stream-api"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#stream-api"}},[a._v("#")]),a._v(" Stream API")]),a._v(" "),s("blockquote",[s("p",[a._v("源数据->流操作->新数据")])]),a._v(" "),s("div",{staticClass:"language-txt line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-txt"}},[s("code",[a._v("Stream 自己不会存储元素。\nStream 不会改变源对象。相反，他们会返回一个持有结果的新Stream。\nStream 操作是延迟执行的。这意味着他们会等到需要结果的时候才执行。\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br")])]),s("p",[s("img",{attrs:{src:"https://cdn.staticaly.com/gh/jinmunan/imgs@master/java8/image-20230101174601076.png",alt:"image-20230101174601076"}})]),a._v(" "),s("h3",{attrs:{id:"创建流"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建流"}},[a._v("#")]),a._v(" 创建流")]),a._v(" "),s("div",{staticClass:"language-txt line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-txt"}},[s("code",[a._v("-- 通过集合\nnew stream() : 返回一个顺序流\nnew parallelStream() : 返回一个并行流\n-- 通过数组\nArrays.stream()\n-- 通过Stream的of()\nStream.of()\n-- 创建无限流\nStream.iterate()\nStream.generate()\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br")])]),s("h3",{attrs:{id:"中间操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#中间操作"}},[a._v("#")]),a._v(" 中间操作")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.staticaly.com/gh/jinmunan/imgs@master/java8/image-20230101174648281.png",alt:"image-20230101174648281"}})]),a._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.staticaly.com/gh/jinmunan/imgs@master/java8/image-20230101174701711.png",alt:"image-20230101174701711"}})]),a._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.staticaly.com/gh/jinmunan/imgs@master/java8/image-20230101174709944.png",alt:"image-20230101174709944"}})]),a._v(" "),s("h3",{attrs:{id:"终止操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#终止操作"}},[a._v("#")]),a._v(" 终止操作")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.staticaly.com/gh/jinmunan/imgs@master/java8/image-20230101174720832.png",alt:"image-20230101174720832"}})]),a._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.staticaly.com/gh/jinmunan/imgs@master/java8/image-20230101174730953.png",alt:"image-20230101174730953"}})]),a._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.staticaly.com/gh/jinmunan/imgs@master/java8/image-20230101174740320.png",alt:"image-20230101174740320"}})]),a._v(" "),s("h3",{attrs:{id:"collectors"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#collectors"}},[a._v("#")]),a._v(" Collectors")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.staticaly.com/gh/jinmunan/imgs@master/java8/image-20230101174900129.png",alt:"image-20230101174900129"}})]),a._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.staticaly.com/gh/jinmunan/imgs@master/java8/image-20230101174909361.png",alt:"image-20230101174909361"}})]),a._v(" "),s("h2",{attrs:{id:"optional类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#optional类"}},[a._v("#")]),a._v(" Optional类")]),a._v(" "),s("div",{staticClass:"language-txt line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-txt"}},[s("code",[a._v("Optional<T> 类(java.util.Optional) 是一个容器类，它可以保存类型T的值，代表这个值存在。或者仅仅保存null，表示这个值不存在。原来用 null 表示一个值不存在，现在 Optional 可以更好的表达这个概念。并且可以避免空指针异常\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("p",[s("img",{attrs:{src:"https://cdn.staticaly.com/gh/jinmunan/imgs@master/java8/image-20230101174840798.png",alt:"image-20230101174840798"}})]),a._v(" "),s("h2",{attrs:{id:"接口中的默认方法与静态方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#接口中的默认方法与静态方法"}},[a._v("#")]),a._v(" 接口中的默认方法与静态方法")]),a._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("interface")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("DefaultMethodDemo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("default")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("getName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"接口中实现的默认方法"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("static")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("getTitle")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"接口中的静态方法"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Demo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("getName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"父类中实现的方法"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Test")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("extends")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Demo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("implements")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("DefaultMethodDemo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("static")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 父类优先原则")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Test")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("getName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 接口中的静态方法")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("DefaultMethodDemo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("getTitle")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//父类中实现的方法")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//接口中的静态方法")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br"),s("span",{staticClass:"line-number"},[a._v("11")]),s("br"),s("span",{staticClass:"line-number"},[a._v("12")]),s("br"),s("span",{staticClass:"line-number"},[a._v("13")]),s("br"),s("span",{staticClass:"line-number"},[a._v("14")]),s("br"),s("span",{staticClass:"line-number"},[a._v("15")]),s("br"),s("span",{staticClass:"line-number"},[a._v("16")]),s("br"),s("span",{staticClass:"line-number"},[a._v("17")]),s("br"),s("span",{staticClass:"line-number"},[a._v("18")]),s("br"),s("span",{staticClass:"line-number"},[a._v("19")]),s("br"),s("span",{staticClass:"line-number"},[a._v("20")]),s("br"),s("span",{staticClass:"line-number"},[a._v("21")]),s("br"),s("span",{staticClass:"line-number"},[a._v("22")]),s("br"),s("span",{staticClass:"line-number"},[a._v("23")]),s("br"),s("span",{staticClass:"line-number"},[a._v("24")]),s("br"),s("span",{staticClass:"line-number"},[a._v("25")]),s("br"),s("span",{staticClass:"line-number"},[a._v("26")]),s("br")])]),s("h2",{attrs:{id:"新时间日期api"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#新时间日期api"}},[a._v("#")]),a._v(" 新时间日期API")]),a._v(" "),s("blockquote",[s("p",[a._v("旧时间API线程不安全，新时间API线程安全")])]),a._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[a._v("java"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("time "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v(" 包含值对象的基础包\njava"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("chrono "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v(" 提供对不同的日历系统的访问\njava"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("format "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v(" 格式化和解析时间和日期\njava"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("temporal "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v(" 包括底层框架和拓展特性\njava"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("zone "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v(" 包含时区支持的类\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br")])]),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("LocalDateTime")]),a._v(" localDateTime "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("LocalDateTime")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("now")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("DateTimeFormatter")]),a._v(" dtf "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("DateTimeFormatter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("ofPattern")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"yyyy-MM-dd hh:mm:ss"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\nlog"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("info")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"=====>"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v(" dtf"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("format")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("localDateTime"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br")])])])}),[],!1,null,null,null);s.default=e.exports}}]);