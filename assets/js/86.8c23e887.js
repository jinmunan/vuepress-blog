(window.webpackJsonp=window.webpackJsonp||[]).push([[86],{416:function(t,a,v){"use strict";v.r(a);var _=v(3),r=Object(_.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"maven其他概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#maven其他概念"}},[t._v("#")]),t._v(" Maven其他概念")]),t._v(" "),a("h2",{attrs:{id:"生命周期"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#生命周期"}},[t._v("#")]),t._v(" 生命周期")]),t._v(" "),a("h3",{attrs:{id:"作用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#作用"}},[t._v("#")]),t._v(" 作用")]),t._v(" "),a("p",[t._v("为了让构建过程自动化完成，Maven 设定了三个生命周期，生命周期中的每一个环节对应构建过程中的一个操作。")]),t._v(" "),a("h3",{attrs:{id:"三个生命周期"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三个生命周期"}},[t._v("#")]),t._v(" 三个生命周期")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("生命周期名称")]),t._v(" "),a("th",[t._v("作用")]),t._v(" "),a("th",[t._v("各个环节")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("Clean")]),t._v(" "),a("td",[t._v("清理操作相关")]),t._v(" "),a("td",[t._v("略")])]),t._v(" "),a("tr",[a("td",[t._v("Site")]),t._v(" "),a("td",[t._v("生成站点相关")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("Default")]),t._v(" "),a("td",[t._v("主要构建过程")]),t._v(" "),a("td")])])]),t._v(" "),a("h3",{attrs:{id:"特点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#特点"}},[t._v("#")]),t._v(" 特点")]),t._v(" "),a("ul",[a("li",[t._v("前面三个生命周期彼此是独立的。")]),t._v(" "),a("li",[t._v("在任何一个生命周期内部，执行任何一个具体环节的操作，都是从本周期最初的位置开始执行，直到指定的地方。（本节记住这句话就行了，其他的都不需要记）。")])]),t._v(" "),a("p",[t._v("Maven 之所以这么设计其实就是为了提高构建过程的自动化程度：让使用者只关心最终要干的即可，过程中的各个环节是自动执行的。")]),t._v(" "),a("h2",{attrs:{id:"插件和目标"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#插件和目标"}},[t._v("#")]),t._v(" 插件和目标")]),t._v(" "),a("h3",{attrs:{id:"插件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#插件"}},[t._v("#")]),t._v(" 插件")]),t._v(" "),a("p",[t._v("Maven 的核心程序仅仅负责宏观调度，不做具体工作。具体工作都是由 Maven 插件完成的。例如：编译就是由 maven-compiler-plugin-3.1.jar 插件来执行的。")]),t._v(" "),a("h3",{attrs:{id:"目标"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#目标"}},[t._v("#")]),t._v(" 目标")]),t._v(" "),a("p",[t._v("一个插件可以对应多个目标，而每一个目标都和生命周期中的某一个环节对应。")]),t._v(" "),a("p",[t._v("Default 生命周期中有 compile 和 test-compile 两个和编译相关的环节，这两个环节对应 compile 和 test-compile 两个目标，而这两个目标都是由 maven-compiler-plugin-3.1.jar 插件来执行的。")]),t._v(" "),a("h2",{attrs:{id:"仓库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#仓库"}},[t._v("#")]),t._v(" 仓库")]),t._v(" "),a("h3",{attrs:{id:"本地仓库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#本地仓库"}},[t._v("#")]),t._v(" 本地仓库")]),t._v(" "),a("p",[t._v("在当前电脑上，为电脑上所有 Maven 工程服务")]),t._v(" "),a("h3",{attrs:{id:"远程仓库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#远程仓库"}},[t._v("#")]),t._v(" 远程仓库")]),t._v(" "),a("p",[t._v("需要联网")]),t._v(" "),a("ul",[a("li",[t._v("局域网：我们自己搭建的 Maven 私服，例如使用 Nexus 技术。")]),t._v(" "),a("li",[t._v("Internet\n"),a("ul",[a("li",[t._v("中央仓库")]),t._v(" "),a("li",[t._v("镜像仓库：内容和中央仓库保持一致，但是能够分担中央仓库的负载，同时让用户能够就近访问提高下载速度，例如：Nexus aliyun")])])])]),t._v(" "),a("p",[t._v("建议：不要中央仓库和阿里云镜像混用，否则 jar 包来源不纯，彼此冲突。")]),t._v(" "),a("p",[t._v("专门搜索 Maven 依赖信息的网站：https://mvnrepository.com/")])])}),[],!1,null,null,null);a.default=r.exports}}]);