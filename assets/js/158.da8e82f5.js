(window.webpackJsonp=window.webpackJsonp||[]).push([[158],{489:function(s,a,n){"use strict";n.r(a);var e=n(3),t=Object(e.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"springboot整合log4j2日志全解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#springboot整合log4j2日志全解"}},[s._v("#")]),s._v(" Springboot整合log4j2日志全解")]),s._v(" "),a("h2",{attrs:{id:"常用日志框架"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常用日志框架"}},[s._v("#")]),s._v(" 常用日志框架")]),s._v(" "),a("ul",[a("li",[s._v("java.util.logging：是JDK在1.4版本中引入的Java原生日志框架")]),s._v(" "),a("li",[s._v("Log4j：Apache的一个开源项目，可以控制日志信息输送的目的地是控制台、文件、GUI组件等，可以控制每一条日志的输出格式，这些可以通过一个配置文件来灵活地进行配置，而不需要修改应用的代码。虽然已经停止维护了，但目前绝大部分企业都是用的log4j。")]),s._v(" "),a("li",[s._v("LogBack：是Log4j的一个改良版本")]),s._v(" "),a("li",[s._v("Log4j2：Log4j2已经不仅仅是Log4j的一个升级版本了，它从头到尾都被重写了")])]),s._v(" "),a("h2",{attrs:{id:"日志门面slf4j"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#日志门面slf4j"}},[s._v("#")]),s._v(" 日志门面slf4j")]),s._v(" "),a("blockquote",[a("p",[s._v("上述介绍的是一些日志框架的实现，这里我们需要用日志门面来解决系统与日志实现框架的耦合性。SLF4J，即简单日志门面（Simple Logging Facade for Java），它不是一个真正的日志实现，而是一个抽象层（ abstraction layer），它允许你在后台使用任意一个日志实现。")])]),s._v(" "),a("p",[a("a",{attrs:{href:"http://axin-soochow.oss-cn-hangzhou.aliyuncs.com/18-12-3/35274748.jpg",target:"_blank",rel:"noopener noreferrer"}},[a("img",{attrs:{src:"%E6%97%A5%E5%BF%97.assets/35274748.jpg",alt:"img"}}),a("OutboundLink")],1)]),s._v(" "),a("p",[s._v("前面介绍的几种日志框架一样，每一种日志框架都有自己单独的API，要使用对应的框架就要使用其对应的API，这就大大的增加应用程序代码对于日志框架的耦合性。")]),s._v(" "),a("p",[s._v("使用了slf4j后，对于应用程序来说，无论底层的日志框架如何变，应用程序不需要修改任意一行代码，就可以直接上线了。")]),s._v(" "),a("h2",{attrs:{id:"为什么选用log4j2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为什么选用log4j2"}},[s._v("#")]),s._v(" 为什么选用log4j2")]),s._v(" "),a("blockquote",[a("p",[s._v("相比与其他的日志系统，log4j2丢数据这种情况少；disruptor技术，在多线程环境下，性能高于logback等10倍以上；利用jdk1.5并发的特性，减少了死锁的发生；")])]),s._v(" "),a("p",[s._v("在这列举一下一些网上其他博文中对它们的性能评测：")]),s._v(" "),a("ul",[a("li",[s._v("可以看到在同步日志模式下, Logback的性能是最糟糕的.")]),s._v(" "),a("li",[s._v("log4j2的性能无论在同步日志模式还是异步日志模式下都是最佳的.")])]),s._v(" "),a("p",[a("a",{attrs:{href:"http://axin-soochow.oss-cn-hangzhou.aliyuncs.com/18-12-10/31312446.jpg",target:"_blank",rel:"noopener noreferrer"}},[a("img",{attrs:{src:"%E6%97%A5%E5%BF%97.assets/31312446.jpg",alt:"img"}}),a("OutboundLink")],1)]),s._v(" "),a("p",[s._v("log4j2优越的性能其原因在于log4j2使用了LMAX,一个无锁的线程间通信库代替了,logback和log4j之前的队列. 并发性能大大提升。")]),s._v(" "),a("h2",{attrs:{id:"整合步骤"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#整合步骤"}},[s._v("#")]),s._v(" 整合步骤")]),s._v(" "),a("h3",{attrs:{id:"引入jar包"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#引入jar包"}},[s._v("#")]),s._v(" 引入Jar包")]),s._v(" "),a("blockquote",[a("p",[s._v("springboot默认是用logback的日志框架的，所以需要排除logback，不然会出现jar依赖冲突的报错。")])]),s._v(" "),a("p",[s._v("HTML")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("<dependency>  \n    <groupId>org.springframework.boot</groupId>  \n    <artifactId>spring-boot-starter-web</artifactId>  \n    <exclusions>\x3c!-- 去掉springboot默认配置 --\x3e  \n        <exclusion>  \n            <groupId>org.springframework.boot</groupId>  \n            <artifactId>spring-boot-starter-logging</artifactId>  \n        </exclusion>  \n    </exclusions>  \n</dependency> \n\n<dependency> \x3c!-- 引入log4j2依赖 --\x3e  \n    <groupId>org.springframework.boot</groupId>  \n    <artifactId>spring-boot-starter-log4j2</artifactId>  \n</dependency> \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br")])]),a("h3",{attrs:{id:"配置文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置文件"}},[s._v("#")]),s._v(" 配置文件")]),s._v(" "),a("ol",[a("li",[s._v("如果自定义了文件名，需要在application.yml中配置")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("logging:\n  config: xxxx.xml\n  level:\n    cn.jay.repository: trace\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("ol",[a("li",[s._v("默认名log4j2-spring.xml，就省下了在application.yml中配置")])]),s._v(" "),a("h3",{attrs:{id:"配置文件模版"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置文件模版"}},[s._v("#")]),s._v(" 配置文件模版")]),s._v(" "),a("blockquote",[a("p",[s._v("log4j是通过一个.properties的文件作为主配置文件的，而现在的log4j2则已经弃用了这种方式，采用的是.xml，.json或者.jsn这种方式来做，可能这也是技术发展的一个必然性，因为properties文件的可阅读性真的是有点差。这里给出博主自配的一个模版，供大家参考。")])]),s._v(" "),a("p",[s._v("HTML")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('<?xml version="1.0" encoding="UTF-8"?>\n\x3c!--Configuration后面的status，这个用于设置log4j2自身内部的信息输出，可以不设置，当设置成trace时，你会看到log4j2内部各种详细输出--\x3e\n\x3c!--monitorInterval：Log4j能够自动检测修改配置 文件和重新配置本身，设置间隔秒数--\x3e\n<configuration monitorInterval="5">\n  \x3c!--日志级别以及优先级排序: OFF > FATAL > ERROR > WARN > INFO > DEBUG > TRACE > ALL --\x3e\n\n  \x3c!--变量配置--\x3e\n  <Properties>\n    \x3c!-- 格式化输出：%date表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度 %msg：日志消息，%n是换行符--\x3e\n    \x3c!-- %logger{36} 表示 Logger 名字最长36个字符 --\x3e\n    <property name="LOG_PATTERN" value="%date{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n" />\n    \x3c!-- 定义日志存储的路径 --\x3e\n    <property name="FILE_PATH" value="更换为你的日志路径" />\n    <property name="FILE_NAME" value="更换为你的项目名" />\n  </Properties>\n\n  <appenders>\n\n    <console name="Console" target="SYSTEM_OUT">\n      \x3c!--输出日志的格式--\x3e\n      <PatternLayout pattern="${LOG_PATTERN}"/>\n      \x3c!--控制台只输出level及其以上级别的信息（onMatch），其他的直接拒绝（onMismatch）--\x3e\n      <ThresholdFilter level="info" onMatch="ACCEPT" onMismatch="DENY"/>\n    </console>\n\n    \x3c!--文件会打印出所有信息，这个log每次运行程序会自动清空，由append属性决定，适合临时测试用--\x3e\n    <File name="Filelog" fileName="${FILE_PATH}/test.log" append="false">\n      <PatternLayout pattern="${LOG_PATTERN}"/>\n    </File>\n\n    \x3c!-- 这个会打印出所有的info及以下级别的信息，每次大小超过size，则这size大小的日志会自动存入按年份-月份建立的文件夹下面并进行压缩，作为存档--\x3e\n    <RollingFile name="RollingFileInfo" fileName="${FILE_PATH}/info.log" filePattern="${FILE_PATH}/${FILE_NAME}-INFO-%d{yyyy-MM-dd}_%i.log.gz">\n      \x3c!--控制台只输出level及以上级别的信息（onMatch），其他的直接拒绝（onMismatch）--\x3e\n      <ThresholdFilter level="info" onMatch="ACCEPT" onMismatch="DENY"/>\n      <PatternLayout pattern="${LOG_PATTERN}"/>\n      <Policies>\n        \x3c!--interval属性用来指定多久滚动一次，默认是1 hour--\x3e\n        <TimeBasedTriggeringPolicy interval="1"/>\n        <SizeBasedTriggeringPolicy size="10MB"/>\n      </Policies>\n      \x3c!-- DefaultRolloverStrategy属性如不设置，则默认为最多同一文件夹下7个文件开始覆盖--\x3e\n      <DefaultRolloverStrategy max="15"/>\n    </RollingFile>\n\n    \x3c!-- 这个会打印出所有的warn及以下级别的信息，每次大小超过size，则这size大小的日志会自动存入按年份-月份建立的文件夹下面并进行压缩，作为存档--\x3e\n    <RollingFile name="RollingFileWarn" fileName="${FILE_PATH}/warn.log" filePattern="${FILE_PATH}/${FILE_NAME}-WARN-%d{yyyy-MM-dd}_%i.log.gz">\n      \x3c!--控制台只输出level及以上级别的信息（onMatch），其他的直接拒绝（onMismatch）--\x3e\n      <ThresholdFilter level="warn" onMatch="ACCEPT" onMismatch="DENY"/>\n      <PatternLayout pattern="${LOG_PATTERN}"/>\n      <Policies>\n        \x3c!--interval属性用来指定多久滚动一次，默认是1 hour--\x3e\n        <TimeBasedTriggeringPolicy interval="1"/>\n        <SizeBasedTriggeringPolicy size="10MB"/>\n      </Policies>\n      \x3c!-- DefaultRolloverStrategy属性如不设置，则默认为最多同一文件夹下7个文件开始覆盖--\x3e\n      <DefaultRolloverStrategy max="15"/>\n    </RollingFile>\n\n    \x3c!-- 这个会打印出所有的error及以下级别的信息，每次大小超过size，则这size大小的日志会自动存入按年份-月份建立的文件夹下面并进行压缩，作为存档--\x3e\n    <RollingFile name="RollingFileError" fileName="${FILE_PATH}/error.log" filePattern="${FILE_PATH}/${FILE_NAME}-ERROR-%d{yyyy-MM-dd}_%i.log.gz">\n      \x3c!--控制台只输出level及以上级别的信息（onMatch），其他的直接拒绝（onMismatch）--\x3e\n      <ThresholdFilter level="error" onMatch="ACCEPT" onMismatch="DENY"/>\n      <PatternLayout pattern="${LOG_PATTERN}"/>\n      <Policies>\n        \x3c!--interval属性用来指定多久滚动一次，默认是1 hour--\x3e\n        <TimeBasedTriggeringPolicy interval="1"/>\n        <SizeBasedTriggeringPolicy size="10MB"/>\n      </Policies>\n      \x3c!-- DefaultRolloverStrategy属性如不设置，则默认为最多同一文件夹下7个文件开始覆盖--\x3e\n      <DefaultRolloverStrategy max="15"/>\n    </RollingFile>\n\n  </appenders>\n\n  \x3c!--Logger节点用来单独指定日志的形式，比如要为指定包下的class指定不同的日志级别等。--\x3e\n  \x3c!--然后定义loggers，只有定义了logger并引入的appender，appender才会生效--\x3e\n  <loggers>\n\n    \x3c!--过滤掉spring和mybatis的一些无用的DEBUG信息--\x3e\n    <logger name="org.mybatis" level="info" additivity="false">\n      <AppenderRef ref="Console"/>\n    </logger>\n    \x3c!--监控系统信息--\x3e\n    \x3c!--若是additivity设为false，则 子Logger 只会在自己的appender里输出，而不会在 父Logger 的appender里输出。--\x3e\n    <Logger name="org.springframework" level="info" additivity="false">\n      <AppenderRef ref="Console"/>\n    </Logger>\n\n    <root level="info">\n      <appender-ref ref="Console"/>\n      <appender-ref ref="Filelog"/>\n      <appender-ref ref="RollingFileInfo"/>\n      <appender-ref ref="RollingFileWarn"/>\n      <appender-ref ref="RollingFileError"/>\n    </root>\n  </loggers>\n\n</configuration>\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br"),a("span",{staticClass:"line-number"},[s._v("41")]),a("br"),a("span",{staticClass:"line-number"},[s._v("42")]),a("br"),a("span",{staticClass:"line-number"},[s._v("43")]),a("br"),a("span",{staticClass:"line-number"},[s._v("44")]),a("br"),a("span",{staticClass:"line-number"},[s._v("45")]),a("br"),a("span",{staticClass:"line-number"},[s._v("46")]),a("br"),a("span",{staticClass:"line-number"},[s._v("47")]),a("br"),a("span",{staticClass:"line-number"},[s._v("48")]),a("br"),a("span",{staticClass:"line-number"},[s._v("49")]),a("br"),a("span",{staticClass:"line-number"},[s._v("50")]),a("br"),a("span",{staticClass:"line-number"},[s._v("51")]),a("br"),a("span",{staticClass:"line-number"},[s._v("52")]),a("br"),a("span",{staticClass:"line-number"},[s._v("53")]),a("br"),a("span",{staticClass:"line-number"},[s._v("54")]),a("br"),a("span",{staticClass:"line-number"},[s._v("55")]),a("br"),a("span",{staticClass:"line-number"},[s._v("56")]),a("br"),a("span",{staticClass:"line-number"},[s._v("57")]),a("br"),a("span",{staticClass:"line-number"},[s._v("58")]),a("br"),a("span",{staticClass:"line-number"},[s._v("59")]),a("br"),a("span",{staticClass:"line-number"},[s._v("60")]),a("br"),a("span",{staticClass:"line-number"},[s._v("61")]),a("br"),a("span",{staticClass:"line-number"},[s._v("62")]),a("br"),a("span",{staticClass:"line-number"},[s._v("63")]),a("br"),a("span",{staticClass:"line-number"},[s._v("64")]),a("br"),a("span",{staticClass:"line-number"},[s._v("65")]),a("br"),a("span",{staticClass:"line-number"},[s._v("66")]),a("br"),a("span",{staticClass:"line-number"},[s._v("67")]),a("br"),a("span",{staticClass:"line-number"},[s._v("68")]),a("br"),a("span",{staticClass:"line-number"},[s._v("69")]),a("br"),a("span",{staticClass:"line-number"},[s._v("70")]),a("br"),a("span",{staticClass:"line-number"},[s._v("71")]),a("br"),a("span",{staticClass:"line-number"},[s._v("72")]),a("br"),a("span",{staticClass:"line-number"},[s._v("73")]),a("br"),a("span",{staticClass:"line-number"},[s._v("74")]),a("br"),a("span",{staticClass:"line-number"},[s._v("75")]),a("br"),a("span",{staticClass:"line-number"},[s._v("76")]),a("br"),a("span",{staticClass:"line-number"},[s._v("77")]),a("br"),a("span",{staticClass:"line-number"},[s._v("78")]),a("br"),a("span",{staticClass:"line-number"},[s._v("79")]),a("br"),a("span",{staticClass:"line-number"},[s._v("80")]),a("br"),a("span",{staticClass:"line-number"},[s._v("81")]),a("br"),a("span",{staticClass:"line-number"},[s._v("82")]),a("br"),a("span",{staticClass:"line-number"},[s._v("83")]),a("br"),a("span",{staticClass:"line-number"},[s._v("84")]),a("br"),a("span",{staticClass:"line-number"},[s._v("85")]),a("br"),a("span",{staticClass:"line-number"},[s._v("86")]),a("br"),a("span",{staticClass:"line-number"},[s._v("87")]),a("br"),a("span",{staticClass:"line-number"},[s._v("88")]),a("br"),a("span",{staticClass:"line-number"},[s._v("89")]),a("br"),a("span",{staticClass:"line-number"},[s._v("90")]),a("br"),a("span",{staticClass:"line-number"},[s._v("91")]),a("br"),a("span",{staticClass:"line-number"},[s._v("92")]),a("br"),a("span",{staticClass:"line-number"},[s._v("93")]),a("br"),a("span",{staticClass:"line-number"},[s._v("94")]),a("br"),a("span",{staticClass:"line-number"},[s._v("95")]),a("br"),a("span",{staticClass:"line-number"},[s._v("96")]),a("br"),a("span",{staticClass:"line-number"},[s._v("97")]),a("br"),a("span",{staticClass:"line-number"},[s._v("98")]),a("br")])]),a("h2",{attrs:{id:"配置参数简介"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置参数简介"}},[s._v("#")]),s._v(" 配置参数简介")]),s._v(" "),a("blockquote",[a("p",[s._v("在这里简单介绍下常用的配置参数")])]),s._v(" "),a("ol",[a("li",[s._v("日志级别")])]),s._v(" "),a("blockquote",[a("p",[s._v("机制：如果一条日志信息的级别大于等于配置文件的级别，就记录。")])]),s._v(" "),a("ul",[a("li",[s._v("trace：追踪，就是程序推进一下，可以写个trace输出")]),s._v(" "),a("li",[s._v("debug：调试，一般作为最低级别，trace基本不用。")]),s._v(" "),a("li",[s._v("info：输出重要的信息，使用较多")]),s._v(" "),a("li",[s._v("warn：警告，有些信息不是错误信息，但也要给程序员一些提示。")]),s._v(" "),a("li",[s._v("error：错误信息。用的也很多。")]),s._v(" "),a("li",[s._v("fatal：致命错误。")])]),s._v(" "),a("ol",[a("li",[s._v("输出源")])]),s._v(" "),a("ul",[a("li",[s._v("CONSOLE（输出到控制台）")]),s._v(" "),a("li",[s._v("FILE（输出到文件）")])]),s._v(" "),a("ol",[a("li",[s._v("格式")])]),s._v(" "),a("ul",[a("li",[s._v("SimpleLayout：以简单的形式显示")]),s._v(" "),a("li",[s._v("HTMLLayout：以HTML表格显示")]),s._v(" "),a("li",[s._v("PatternLayout：自定义形式显示")])]),s._v(" "),a("p",[s._v("PatternLayout自定义日志布局：")]),s._v(" "),a("p",[s._v("CSS")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('%d{yyyy-MM-dd HH:mm:ss, SSS} : 日志生产时间,输出到毫秒的时间\n%-5level : 输出日志级别，-5表示左对齐并且固定输出5个字符，如果不足在右边补0\n%c : logger的名称(%logger)\n%t : 输出当前线程名称\n%p : 日志输出格式\n%m : 日志内容，即 logger.info("message")\n%n : 换行符\n%C : Java类名(%F)\n%L : 行号\n%M : 方法名\n%l : 输出语句所在的行数, 包括类名、方法名、文件名、行数\nhostName : 本地机器名\nhostAddress : 本地ip地址\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br")])]),a("h2",{attrs:{id:"log4j2配置详解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#log4j2配置详解"}},[s._v("#")]),s._v(" Log4j2配置详解")]),s._v(" "),a("ol",[a("li",[s._v("根节点Configuration\n有两个属性:")])]),s._v(" "),a("ul",[a("li",[s._v("status")]),s._v(" "),a("li",[s._v("monitorinterval")])]),s._v(" "),a("p",[s._v("有两个子节点:")]),s._v(" "),a("ul",[a("li",[s._v("Appenders")]),s._v(" "),a("li",[s._v("Loggers(表明可以定义多个Appender和Logger).")])]),s._v(" "),a("p",[s._v("status用来指定log4j本身的打印日志的级别.\nmonitorinterval用于指定log4j自动重新配置的监测间隔时间，单位是s,最小是5s.")]),s._v(" "),a("ol",[a("li",[s._v("Appenders节点\n常见的有三种子节点:Console、RollingFile、File")])]),s._v(" "),a("p",[a("strong",[s._v("Console节点用来定义输出到控制台的Appender")]),s._v(".")]),s._v(" "),a("ul",[a("li",[s._v("name:指定Appender的名字.")]),s._v(" "),a("li",[s._v("target:SYSTEM_OUT 或 SYSTEM_ERR,一般只设置默认:SYSTEM_OUT.")]),s._v(" "),a("li",[s._v("PatternLayout:输出格式，不设置默认为:%m%n.")])]),s._v(" "),a("p",[a("strong",[s._v("File节点用来定义输出到指定位置的文件的Appender")]),s._v(".")]),s._v(" "),a("ul",[a("li",[s._v("name:指定Appender的名字.")]),s._v(" "),a("li",[s._v("fileName:指定输出日志的目的文件带全路径的文件名.")]),s._v(" "),a("li",[s._v("PatternLayout:输出格式，不设置默认为:%m%n.")])]),s._v(" "),a("p",[a("strong",[s._v("RollingFile节点用来定义超过指定条件自动删除旧的创建新的Appender")]),s._v(".")]),s._v(" "),a("ul",[a("li",[s._v("name:指定Appender的名字.")]),s._v(" "),a("li",[s._v("fileName:指定输出日志的目的文件带全路径的文件名.")]),s._v(" "),a("li",[s._v("PatternLayout:输出格式，不设置默认为:%m%n.")]),s._v(" "),a("li",[s._v("filePattern : 指定当发生Rolling时，文件的转移和重命名规则.")]),s._v(" "),a("li",[s._v("Policies:指定滚动日志的策略，就是什么时候进行新建日志文件输出日志.")]),s._v(" "),a("li",[s._v("TimeBasedTriggeringPolicy:Policies子节点，基于时间的滚动策略，interval属性用来指定多久滚动一次，默认是1 hour。modulate=true用来调整时间：比如现在是早上3am，interval是4，那么第一次滚动是在4am，接着是8am，12am...而不是7am.")]),s._v(" "),a("li",[s._v("SizeBasedTriggeringPolicy:Policies子节点，基于指定文件大小的滚动策略，size属性用来定义每个日志文件的大小.")]),s._v(" "),a("li",[s._v("DefaultRolloverStrategy:用来指定同一个文件夹下最多有几个日志文件时开始删除最旧的，创建新的(通过max属性)。")])]),s._v(" "),a("p",[a("strong",[s._v("Loggers节点，常见的有两种:Root和Logger")]),s._v(".\nRoot节点用来指定项目的根日志，如果没有单独指定Logger，那么就会默认使用该Root日志输出")]),s._v(" "),a("ul",[a("li",[s._v("level:日志输出级别，共有8个级别，按照从低到高为：All < Trace < Debug < Info < Warn < Error < AppenderRef：Root的子节点，用来指定该日志输出到哪个Appender.")]),s._v(" "),a("li",[s._v("Logger节点用来单独指定日志的形式，比如要为指定包下的class指定不同的日志级别等。")]),s._v(" "),a("li",[s._v("level:日志输出级别，共有8个级别，按照从低到高为：All < Trace < Debug < Info < Warn < Error < Fatal < OFF.")]),s._v(" "),a("li",[s._v("name:用来指定该Logger所适用的类或者类所在的包全路径,继承自Root节点.")]),s._v(" "),a("li",[s._v('AppenderRef：Logger的子节点，用来指定该日志输出到哪个Appender,如果没有指定，就会默认继承自Root.如果指定了，那么会在指定的这个Appender和Root的Appender中都会输出，此时我们可以设置Logger的additivity="false"只在自定义的Appender中进行输出。')])]),s._v(" "),a("h2",{attrs:{id:"简单使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#简单使用"}},[s._v("#")]),s._v(" 简单使用")]),s._v(" "),a("p",[s._v("java")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("LogExampleOther")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("final")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("org"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("slf4j"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),s._v("Logger")]),s._v(" log "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("org"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("slf4j"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),s._v("LoggerFactory")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("getLogger")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("LogExampleOther")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  \n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    log"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("error")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Something else is wrong here"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("h2",{attrs:{id:"使用lombok工具简化创建logger类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用lombok工具简化创建logger类"}},[s._v("#")]),s._v(" 使用lombok工具简化创建Logger类")]),s._v(" "),a("blockquote",[a("p",[s._v("lombok就是一个注解工具jar包，能帮助我们省略一繁杂的代码。具体介绍可以看我的"),a("a",{attrs:{href:"https://www.cnblogs.com/keeya/p/9929617.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("这篇教程"),a("OutboundLink")],1),s._v("。")])]),s._v(" "),a("p",[s._v("使用lombok后下面的代码等效于上述的代码，这样会更方便的使用日志。")]),s._v(" "),a("p",[s._v("java")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Slf4j")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("LogExampleOther")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  \n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    log"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("error")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Something else is wrong here"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])])])}),[],!1,null,null,null);a.default=t.exports}}]);